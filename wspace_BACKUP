ðŸš€ Oracle APEX â€“ Automating Workspace Backups with PL/SQL
As APEX developers, keeping workspace backups safe and automated is essential.
 Instead of exporting each application manually, hereâ€™s a PL/SQL script that does it all in one go.
  
ðŸ–¥ The Script
-- Bulk Export Oracle APEX A
-- Includes folder structure + timestamp in filename

DECLARE
   l_workspace_name     VARCHAR2(255) := 'PROGRAMMER'; -- Change to your workspace
   l_security_group_id  NUMBER;
   l_zip_blob           BLOB;
   l_export_files       apex_t_export_files;
   l_temp_blob          BLOB;
   l_workspace_label    VARCHAR2(255);
   l_final_zip_name     VARCHAR2(255);
   l_timestamp_str      VARCHAR2(30) := TO_CHAR(SYSDATE, 'YYYYMMDD_HH24MISS');
BEGIN
   -- Set security context
   l_security_group_id := apex_util.find_security_group_id(p_workspace => l_workspace_name);
   apex_util.set_security_group_id(l_security_group_id);

   -- Create temporary BLOB for ZIP
   dbms_lob.createtemporary(l_zip_blob, TRUE);

   -- Get clean workspace display name for folder
   SELECT REGEXP_REPLACE(workspace_display_name, '[^a-zA-Z0-9_]', '_')
     INTO l_workspace_label
     FROM apex_applications
    WHERE UPPER(workspace) = UPPER(l_workspace_name)
      AND ROWNUM = 1;

   -- Loop through all apps 
   FOR app_rec IN (
       SELECT application_id, application_name
         FROM apex_applications
        WHERE UPPER(workspace) = UPPER(l_workspace_name)
   ) LOOP
       -- Export application files
       l_export_files := apex_export.get_application(app_rec.application_id);

       -- Add files to ZIP with folder hierarchy
       FOR i IN 1 .. l_export_files.COUNT LOOP
           l_temp_blob := apex_util.clob_to_blob(l_export_files(i).contents);

           apex_zip.add_file(
               l_zip_blob,
               l_workspace_label || '/apps/app_' || app_rec.application_id || '/' || l_export_files(i).name,
               l_temp_blob
           );
       END LOOP;
   END LOOP;
 
   apex_zip.finish(l_zip_blob);
   l_final_zip_name := l_workspace_label || 'backup' || l_timestamp_str || '.zip';

   -- Download ZIP
apex_http.download(l_zip_blob, 'application/zip', l_final_zip_name);

   -- Clean up
   dbms_lob.freetemporary(l_zip_blob);
END;
  
âš¡ Implementation Steps
â¿¡ Add a Button â†’ e.g., Download Apps
 â¿¢ Set Action = Redirect to Page in this Application
 â¿£ Set Request = DOWNLOAD_APPS
 â¿¤ Create a Before Header Process â†’ Type = PL/SQL Code
 â¿¥ Paste the script above
 â¿¦ Add a Condition â†’ Request = DOWNLOAD_APPS
 â¿§ Change l_workspace_name to match your workspace

Click the button â†’ Instantly download a ZIP with all your apps ðŸš€
  
ðŸŽ¯ Benefits
âœ” Batch Export â†’ All apps in one go
 âœ” Structured ZIP â†’ Organized folders for each application
 âœ” Timestamped â†’ Unique backups (no overwrites)
 âœ” Automated â†’ Perfect for migrations & deployments
 âœ” Time-Saving â†’ No manual export for eachÂ application
